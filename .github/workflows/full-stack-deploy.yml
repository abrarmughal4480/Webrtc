name: Full Stack CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  deploy-frontend:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: "**/package-lock.json"

      - name: Create frontend source package
        run: |
          git archive --format=tar --prefix=webrtc-share/ HEAD:webrtc-share | gzip > frontend-source.tar.gz

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: ${{ secrets.HOSTINGER_PORT }}
          script: |
            cd ~/webrtc-main
            tar -xzf frontend-source.tar.gz
            rm -f frontend-source.tar.gz
            
            cd webrtc-share
            npm install
            npm run build
            
            pm2 restart webrtc-frontend || pm2 start npm --name "webrtc-frontend" -- start
            pm2 save

  deploy-backend:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: "**/package-lock.json"

      - name: Create backend package
        run: |
          git archive --format=tar --prefix=backend/ HEAD:backend | gzip > backend-deploy.tar.gz

      - name: Deploy backend
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: ${{ secrets.HOSTINGER_PORT }}
          script: |
            cd ~/webrtc-main
            tar -xzf backend-deploy.tar.gz
            rm -f backend-deploy.tar.gz
            
            cd backend
            npm install
            
            pm2 restart webrtc-backend || pm2 start npm --name "webrtc-backend" -- start
            pm2 save
